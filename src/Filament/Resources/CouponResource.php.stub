<?php

namespace App\Filament\Resources;

use App\Filament\Resources\CouponResource\Pages\ListCoupons;
use App\Filament\Resources\CouponResource\Pages\CreateCoupon;
use App\Filament\Resources\CouponResource\Pages\EditCoupon;
use DV5150\Shop\Contracts\Deals\CouponContract;
use DV5150\Shop\Models\Coupon;
use DV5150\Shop\Models\Coupons\CartPercentCoupon;
use DV5150\Shop\Models\Coupons\CartValueCoupon;
use Filament\Forms\Components\MorphToSelect;
use Filament\Forms\Components\MorphToSelect\Type;
use Filament\Forms\Components\TextInput;
use Filament\Resources\Form;
use Filament\Resources\Resource;
use Filament\Resources\Table;
use Filament\Tables\Actions\EditAction;
use Filament\Tables\Actions\DeleteBulkAction;
use Filament\Tables\Columns\TextColumn;

class CouponResource extends Resource
{
    protected static ?string $model = Coupon::class;

    protected static ?string $navigationIcon = 'heroicon-o-ticket';

    protected static ?string $slug = 'shop/coupons';

    protected static ?string $navigationGroup = 'Shop (Coupons)';

    protected static ?string $navigationLabel = 'Coupon Codes';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                MorphToSelect::make('coupon')
                    ->types([
                        Type::make(CartPercentCoupon::class)
                            ->getOptionLabelFromRecordUsing(
                                function (CartPercentCoupon $coupon): string {
                                    return $coupon->getFullName();
                                }
                            )->titleColumnName('name')
                            ->label('Cart Percent Coupon'),
                        Type::make(CartValueCoupon::class)
                            ->getOptionLabelFromRecordUsing(
                                function (CartValueCoupon $coupon): string {
                                    return $coupon->getFullName();
                                }
                            )->titleColumnName('name')
                            ->label('Cart Value Coupon')
                    ])->required(),
                TextInput::make('code')
                    ->required()
                    ->unique(ignoreRecord: true)
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                TextColumn::make('coupon')
                    ->formatStateUsing(
                        fn (CouponContract $state) => $state->getFullName()
                    ),
                TextColumn::make('code'),
            ])
            ->filters([
                //
            ])
            ->actions([
                EditAction::make(),
            ])
            ->bulkActions([
                DeleteBulkAction::make(),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => ListCoupons::route('/'),
            'create' => CreateCoupon::route('/create'),
            'edit' => EditCoupon::route('/{record}/edit'),
        ];
    }
}
